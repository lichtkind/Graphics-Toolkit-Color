

Hierarchy
---------


    = G::T::Color    (public API)
      - new          (GTC::Values::new_from_any_input)
      -----
      - values       (GTC::Values::formatted)
      - name         (GTC::Values::get_name)
      - closest_name (GTC::Values::closest_name_and_distance)
      - distance     (GTC::Values::distance)
      -----
      - set_value    (GTC::Values::set)
      - add_value    (GTC::Values::add)
      - mix          (GTC::Values::mix)
      - invert       (GTC::Values::invert)
      -----
      - complement   (GTC::SetCalculator::complement)
      - gradient     (GTC::SetCalculator::gradient)
      - cluster      (GTC::SetCalculator::cluster)
      ======
        = ::SetCalculator
          - gradient    (Values::mix)
          - complement  (Values::add)
          - cluster     (Values::add)
        ======
        = ::Values
          - new_from_any_input         (GTC::Space::Hub::deformat |GTC::Name::values, -> ..)
          - new_from_tuple             (GTC::Space::Hub::deconvert)
          -----
          - normalized  (  GTC::Space::Hub::convert)
          - shaped      (.. Space->denormalize, clamp, round)
          - formatted   (.. Space->format)
          - name        (:_)
          ----
          - set         (GTC::Space::Hub::partial_hash_deformat)
          - add         (GTC::Space::Hub::partial_hash_deformat)
          - mix         ()
          - invert      ()
          ======
          = ::Space::Name
            - all
            - get_values
            - from_values
            - closest_from_values
            ======
            = ::Space::Name::Scheme
              - new
              - add_color
              -----
              - all_names
              - is_name_taken
              - values_from_name
              - names_from_values
              - closest_names_from_values
              - names_in_range
            ======
            = ::Space::Name::Constant
            ======
            = ::Space::Hub
              - is_space_name
              - all_space_names
              - default_space
              - try_get_space
              - add_space
              - remove_space
              ----
              - convert
              - deconvert
              - deformat
              - deformat_partial_hash
              - distance
            ======
              = ::Space::Instance::(*)
              ======
                = ::Space
                  - format
                  - deformat
                  - clamp
                  - round
                  - normalize
                  - denormalize
                  - denormalize_delta
                  - delta
                  ======
                  = ::Space::Basis
                  ======
                  = ::Space::Shape
                  ======
                  = ::Space::Format
                  ======
                  = ::Space::Util

